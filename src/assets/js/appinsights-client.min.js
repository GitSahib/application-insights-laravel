!function(e){"use strict";var t={queue:[],batchSize:5,retryLimit:3,retryDelay:1e3,collectEndpoint:e.AppInsightsConfig?.collectEndpoint||"/appinsights/collect",trackEvent:function(e,t={}){this.queue.push({type:"event",name:e,properties:t}),console.log("Tracked Event:",e,t),this.queue.length>=this.batchSize&&this.flush()},trackException:function(e,t={}){try{e instanceof Error&&(e={message:e.message,stack:e.stack}),this.queue.push({type:"exception",error:e,properties:t}),console.error("Tracked Exception:",e,t),this.queue.length>=this.batchSize&&this.flush()}catch(e){console.error("Failed to track exception:",e)}},flush:function(){if(this.collectEndpoint&&0!==this.queue.length){var e=this.queue.splice(0,this.batchSize);this.sendBatch(e,0)}},sendBatch:function(e,t){var n=this;try{fetch(this.collectEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(function(e){if(!e.ok)throw new Error("HTTP error "+e.status)}).catch(function(o){console.error("Telemetry send failed:",o),t<n.retryLimit?setTimeout(function(){n.sendBatch(e,t+1)},n.retryDelay*Math.pow(2,t)):console.error("Telemetry batch dropped after retries:",e)})}catch(e){console.error("Failed to flush telemetry batch:",e)}}};e.appInsights=t,e.addEventListener("error",function(e){t.trackException({message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno,stack:e.error?e.error.stack:null}),t.flush()}),e.addEventListener("unhandledrejection",function(e){t.trackException({message:"Unhandled promise rejection",reason:e.reason}),t.flush()}),e.addEventListener("beforeunload",function(){t.flush()})}(window,document);